---
# name: General package installation

- name: Check if helm is installed
  stat:
    path: '/usr/local/bin/helm'
  register: helm_exist

- name: Get current helm client version
  shell: helm version --short -c|grep -oP ": v\K([0-9.]+)(?=\+)"
  register: helm_version_current_client
  when: helm_exist.stat.exists == True

- name: Get current helm server version
  shell: helm version --short -c|grep -oP ": v\K([0-9.]+)(?=\+)"
  register: helm_version_current_server
  when: helm_exist.stat.exists == True


# Download & install helm
- name: Create temporary helm directory
  tempfile:
    state: directory
    suffix: helm
  register: tmpdir
  when: helm_exist.stat.exists == False or helm_version_current_client.stdout != helm_version

- name: Download helm {{ helm_version }} and extract it
  unarchive:
    src: https://storage.googleapis.com/kubernetes-helm/helm-v{{ help_version }}-linux-amd64.tar.gz
    dest: '{{ tmpdir.path }}'
  when: helm_exist.stat.exists == False or helm_version_current_client.stdout != helm_version

- name: Install helm {{ helm_version }}
  unarchive:
    src: https://storage.googleapis.com/kubernetes-helm/helm-v{{ help_version }}-linux-amd64.tar.gz
    dest: '{{ tmpdir.path }}'
  when: helm_exist.stat.exists == False or helm_version_current_client.stdout != helm_version

- name: Delete tmp directory
  file:
    path: '{{ tmpdir.path }}/helm'
    dest: '/usr/local/bin/helm'
    remote_src: yes
  when: helm_exist.stat.exists == False or helm_version_current_client.stdout != helm_version




# Tiller service account
- name: Check serviceaccount "tiller"
  command: kubectl get serviceaccount -n kube-system tiller
  ignore_errors: yes
  register: kubectl_serviceaccount_tiller_exist

- name: Create serviceaccount "tiller"
  command: kubectl create serviceaccount -n kube-system tiller
  when: kubectl_serviceaccount_tiller_exist.rc != 0


# Tiller role binding
- name: Check clusterrolebinding for "tiller"
  command: kubectl get clusterrolebinding tiller-cluster-rule
  ignore_errors: yes
  register: kubectl_clusterrolebinding_tiller_exist

- name: Create clusterrolebinding for "tiller"
  command: kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller
  when: kubectl_clusterrolebinding_tiller_exist.rc != 0


# Install helm
- name: Install helm server
  command: helm init --service-account=tiller --tiller-namespace=kube-system
  when: helm_exist.stat.exists == False or kubectl_clusterrolebinding_tiller_exist.rc != 0

# Upgrade helm
- name: Install helm server
  command: helm init --upgrade
  when: helm_exist.stat.exists == True




















